/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/v1/auth/login': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Login */
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description request request */
      requestBody: {
        content: {
          'application/json': components['schemas']['dto.LoginRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_LoginResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/auth/logout': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Logout */
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/auth/refresh-token': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** Refresh Token */
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description body */
      requestBody: {
        content: {
          'application/json': components['schemas']['dto.RefreshTokenRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_TokenResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/chats': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** list chat */
    get: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-ChatListResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/chats/friends/{friendID}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** get dm chats detail */
    get: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_DirectChatDetailResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/files': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** upload file */
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description file */
      requestBody: {
        content: {
          'application/x-www-form-urlencoded': Record<string, never>
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_FileDetailResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/files/{fileID}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    /** delete file */
    delete: {
      parameters: {
        query?: never
        header?: never
        path: {
          /** @description file id */
          fileID: number
        }
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/groups': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** get groups */
    get: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpListResponse-dto_GroupListResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    /** create group */
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description group detail */
      requestBody: {
        content: {
          'application/json': components['schemas']['dto.CreateGroupRequest']
        }
      }
      responses: {
        /** @description No Content */
        204: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/groups/{groupID}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** get group */
    get: {
      parameters: {
        query?: never
        header?: never
        path: {
          /** @description group id */
          groupID: number
        }
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_GroupDetailResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    post?: never
    /** delete group */
    delete: {
      parameters: {
        query?: never
        header?: never
        path: {
          /** @description group id */
          groupID: number
        }
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description No Content */
        204: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    options?: never
    head?: never
    /** update group */
    patch: {
      parameters: {
        query?: never
        header?: never
        path: {
          /** @description group id */
          groupID: number
        }
        cookie?: never
      }
      /** @description group detail */
      requestBody: {
        content: {
          'application/json': components['schemas']['dto.UpdateGroupRequest']
        }
      }
      responses: {
        /** @description No Content */
        204: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    trace?: never
  }
  '/api/v1/groups/{groupID}/join': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** join group */
    get: {
      parameters: {
        query?: never
        header?: never
        path: {
          /** @description group id */
          groupID: number
        }
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description No Content */
        204: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/groups/{groupID}/leave': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** leave group */
    get: {
      parameters: {
        query?: never
        header?: never
        path: {
          /** @description group id */
          groupID: number
        }
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description No Content */
        204: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/groups/{groupID}/members/{userID}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /** add group member */
    post: {
      parameters: {
        query?: never
        header?: never
        path: {
          /** @description group id */
          groupID: number
          /** @description friend id */
          userID: number
        }
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description No Content */
        204: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    /** kick group member */
    delete: {
      parameters: {
        query?: never
        header?: never
        path: {
          /** @description group id */
          groupID: number
          /** @description friend id */
          userID: number
        }
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description No Content */
        204: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/me': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get me
     * @description Get me
     */
    get: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_UserResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update me
     * @description Update user's profile
     */
    patch: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description request request */
      requestBody: {
        content: {
          'application/json': components['schemas']['dto.UserUpdateRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    trace?: never
  }
  '/api/v1/messages/ws': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * connect to websocket
     * @description Establish a WebSocket connection for real-time communication.
     *     The message from a server will be in a format of "[EVENT] [MESSAGE]" which [EVENT] can be "ERROR" or "MESSAGE".
     *     If [EVENT] is error, [MESSAGE] will be a string of error message ,otherwise it will be a dto.RealTimeMessageResponse
     */
    get: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description Switching Protocols */
        101: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
      }
    }
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/users': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** get users */
    get: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpListResponse-dto_UserResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/users/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** get user by id */
    get: {
      parameters: {
        query?: never
        header?: never
        path: {
          /** @description user id */
          id: number
        }
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_UserDetailResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Unauthorized */
        401: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    'dto.ChatListResponse': {
      directs?: components['schemas']['dto.DirectChatListResponse'][]
      groups?: components['schemas']['dto.GroupChatListResponse'][]
    }
    'dto.CreateGroupRequest': {
      memberIds?: number[]
      name?: string
      profilePictureUrl?: string
    }
    'dto.DirectChatDetailResponse': {
      messages?: components['schemas']['dto.DirectMessageResponse'][]
      user?: components['schemas']['dto.UserResponse']
    }
    'dto.DirectChatListResponse': {
      messages?: components['schemas']['dto.DirectMessageResponse'][]
      user?: components['schemas']['dto.UserResponse']
    }
    'dto.DirectMessageResponse': {
      content?: string
      id?: number
      receiverId?: number
      sendedAt?: string
      senderId?: number
    }
    'dto.FileDetailResponse': {
      id?: number
      ownerId?: number
      path?: string
      url?: string
    }
    'dto.GroupChatListResponse': {
      group?: components['schemas']['dto.GroupListResponse']
      messages?: components['schemas']['dto.GroupMessageResponse'][]
    }
    'dto.GroupDetailResponse': {
      id?: number
      members?: components['schemas']['dto.UserResponse'][]
      messages?: components['schemas']['dto.GroupMessageResponse'][]
      name?: string
      owner?: components['schemas']['dto.UserResponse']
      profilePictureURL?: string
    }
    'dto.GroupListResponse': {
      id?: number
      name?: string
      owner?: components['schemas']['dto.UserResponse']
      profilePictureURL?: string
    }
    'dto.GroupMessageResponse': {
      content?: string
      groupId?: number
      id?: number
      sendedAt?: string
      senderId?: number
    }
    'dto.HttpError': {
      error?: string
    }
    'dto.HttpListResponse-dto_GroupListResponse': {
      result?: components['schemas']['dto.GroupListResponse'][]
    }
    'dto.HttpListResponse-dto_UserResponse': {
      result?: components['schemas']['dto.UserResponse'][]
    }
    'dto.HttpResponse-ChatListResponse': {
      result?: components['schemas']['dto.ChatListResponse']
    }
    'dto.HttpResponse-dto_DirectChatDetailResponse': {
      result?: components['schemas']['dto.DirectChatDetailResponse']
    }
    'dto.HttpResponse-dto_FileDetailResponse': {
      result?: components['schemas']['dto.FileDetailResponse']
    }
    'dto.HttpResponse-dto_GroupDetailResponse': {
      result?: components['schemas']['dto.GroupDetailResponse']
    }
    'dto.HttpResponse-dto_LoginResponse': {
      result?: components['schemas']['dto.LoginResponse']
    }
    'dto.HttpResponse-dto_TokenResponse': {
      result?: components['schemas']['dto.TokenResponse']
    }
    'dto.HttpResponse-dto_UserDetailResponse': {
      result?: components['schemas']['dto.UserDetailResponse']
    }
    'dto.HttpResponse-dto_UserResponse': {
      result?: components['schemas']['dto.UserResponse']
    }
    'dto.LoginRequest': {
      idToken?: string
    }
    'dto.LoginResponse': {
      accessToken?: string
      exp?: number
      refreshToken?: string
      user?: components['schemas']['dto.UserResponse']
    }
    'dto.RefreshTokenRequest': {
      refreshToken?: string
    }
    'dto.TokenResponse': {
      accessToken?: string
      exp?: number
      refreshToken?: string
    }
    'dto.UpdateGroupRequest': {
      id?: number
      name?: string
      profilePicture?: string
    }
    'dto.UserDetailResponse': {
      email?: string
      id?: number
      messages?: components['schemas']['dto.DirectMessageResponse'][]
      name?: string
      profilePictureURL?: string
    }
    'dto.UserResponse': {
      email?: string
      id?: number
      name?: string
      profilePictureUrl?: string
    }
    'dto.UserUpdateRequest': {
      color?: string
      email?: string
      name?: string
      profilePictureUrl?: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export type operations = Record<string, never>
